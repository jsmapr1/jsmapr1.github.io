<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascrip on </title>
    <link>http://thejoemorgan.com/categories/javascrip/</link>
    <description>Recent content in Javascrip on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 18 Aug 2016 10:09:11 +0000</lastBuildDate>
    
	<atom:link href="http://thejoemorgan.com/categories/javascrip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building an NPM Package Part 3: Testing Locally</title>
      <link>http://thejoemorgan.com/2016/08/18/building-an-npm-package-part-3-testing-locally/</link>
      <pubDate>Thu, 18 Aug 2016 10:09:11 +0000</pubDate>
      
      <guid>http://thejoemorgan.com/2016/08/18/building-an-npm-package-part-3-testing-locally/</guid>
      <description>Testing Locally You have, of course been writing tests the whole time, right? Of course, well even so you need to test it out in another application.
Fortunately, it&amp;rsquo;s very simple using npm link.
First, in your the project directory, run npm link this will create a global symlink.
Then in your test project, run npm link [package name].
In my case, npm link frontend-gitlab.
You can combine these into one step by going to the test project and using a relative path: npm link .</description>
    </item>
    
  </channel>
</rss>