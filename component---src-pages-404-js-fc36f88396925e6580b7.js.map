{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/menu/Menu.js","webpack:///./src/components/layout.js","webpack:///./src/images/favicon.ico","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Header","siteTitle","className","style","margin","to","textDecoration","defaultProps","Menu","Layout","children","query","render","data","site","siteMetadata","title","maxWidth","padding","paddingTop","viewBox","xmlns","x1","y1","x2","y2","stroke","strokeDasharray","Date","getFullYear","module","exports","SEO","description","lang","meta","keywords","useStaticQuery","metaDescription","htmlAttributes","titleTemplate","link","rel","type","href","favicon","name","content","property","author","concat","length","join","NotFoundPage"],"mappings":"qKAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,0BAEE,mBACEC,UAAU,UAEV,kBAAIC,MAAO,CAAEC,OAAQ,IACnB,YAAC,OAAD,CACEC,GAAG,IACHF,MAAO,CACLG,eAAe,SAGhBL,OAWXD,EAAOO,aAAe,CACpBN,UAAU,IAGGD,Q,UC3BA,SAASQ,IACtB,OACE,mBAAKN,UAAU,QACX,YAAC,OAAD,CACEA,UAAS,wBACTG,GAAG,YACHF,MAAO,CACLG,eAAe,SAJnB,YAUA,YAAC,OAAD,CACEJ,UAAS,wBACTG,GAAG,WACHF,MAAO,CACLG,eAAe,SAJnB,Y,oBC0COG,IA5CA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,cAAD,CACEC,MAAK,aASLC,OAAQ,SAAAC,GAAI,OACV,8BACE,YAAC,EAAD,CAAQZ,UAAWY,EAAKC,KAAKC,aAAaC,QAC1C,mBACEb,MAAO,CACLC,OAAO,SACPa,SAAU,IACVC,QAAQ,wBACRC,WAAY,IAGd,YAACX,EAAD,MACA,mBAAKN,UAAU,YAAYkB,QAAQ,YAAYC,MAAM,8BACnD,oBAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIC,OAAO,QAAQC,gBAAgB,SAErE,wBAAOjB,GACP,mBAAKR,UAAU,YAAYkB,QAAQ,YAAYC,MAAM,8BACnD,oBAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIC,OAAO,QAAQC,gBAAgB,SAErE,gCACK,IAAIC,MAAOC,cADhB,Y,mEC9CVC,EAAOC,QAAU,IAA0B,uD,kCCA3C,gFAaA,SAASC,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUpB,EAAS,EAATA,MACxCF,EAASuB,yBAAe,YAAxBvB,KAcFwB,EAAkBL,GAAenB,EAAKC,aAAakB,YAEzD,OACE,YAAC,IAAD,CACEM,eAAgB,CACdL,QAEFlB,MAAOA,EACPwB,cAAa,QAAU1B,EAAKC,aAAaC,MACzCyB,KAAM,CACF,CAAEC,IAAK,gBAAiBC,KAAM,YAAaC,KAAK,GAAIC,MAExDV,KAAM,CACJ,CACEW,KAAK,cACLC,QAAST,GAEX,CACEU,SAAS,WACTD,QAAS/B,GAEX,CACEgC,SAAS,iBACTD,QAAST,GAEX,CACEU,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASjC,EAAKC,aAAakC,QAE7B,CACEH,KAAK,gBACLC,QAAS/B,GAEX,CACE8B,KAAK,sBACLC,QAAST,IAGVY,OACCd,EAASe,OAAS,EACd,CACEL,KAAK,WACLC,QAASX,EAASgB,KAAT,OAEX,IAELF,OAAOf,KAKhBH,EAAIzB,aAAe,CACjB2B,KAAK,KACLC,KAAM,GACNC,SAAU,GACVH,YAAY,IAWCD,O,kCCtGf,yDAaeqB,UARM,kBACnB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKrC,MAAM,mBACX,mCACA","file":"component---src-pages-404-js-fc36f88396925e6580b7.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n  >\n    <div\n      className=\"header\"\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react';\nimport { Link } from \"gatsby\"\nimport './menu.css';\n\nlet loaded = false;\nexport default function Menu() {\n  return(\n    <nav className=\"menu\">\n        <Link\n          className={`menu-item ${loaded ? '' : 'menu-splash'}`}\n          to=\"/speaking\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          Speaking\n        </Link>\n\n        <Link\n          className={`menu-item ${loaded ? '' : 'menu-splash'}`}\n          to=\"/writing\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          Writing\n        </Link>\n    </nav>\n  )\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Menu from './menu/Menu';\nimport \"./layout.css\"\nimport \"./main.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <Menu />\n          <svg className=\"separator\" viewBox=\"0 0 700 1\" xmlns=\"http://www.w3.org/2000/svg\">\n            <line x1=\"0\" y1=\"0\" x2=\"700\" y2=\"0\" stroke=\"black\" strokeDasharray=\"1 4\" />\n          </svg>\n          <main>{children}</main>\n          <svg className=\"separator\" viewBox=\"0 0 700 1\" xmlns=\"http://www.w3.org/2000/svg\">\n            <line x1=\"0\" y1=\"0\" x2=\"700\" y2=\"0\" stroke=\"black\" strokeDasharray=\"1 4\" />\n          </svg>\n          <footer>\n            Â© {new Date().getFullYear()}\n            {` `}\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/favicon-56ed36637400a63dccd2ae360f33b7b9.ico\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport favicon from '../images/favicon.ico'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      link={[\n          { rel: 'shortcut icon', type: 'image/png', href: `${favicon}` }\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}